<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HolyK&#39;s Blog</title>
    <link>https://blog.asukakyle.top/</link>
    <description>Recent content on HolyK&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>MIT</copyright>
    <lastBuildDate>Thu, 15 Apr 2021 17:26:44 +0800</lastBuildDate>
    
        <atom:link href="https://blog.asukakyle.top/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>Fast Fourier Transform</title>
        <link>https://blog.asukakyle.top/post/fft/</link>
        <pubDate>Thu, 18 Mar 2021 15:28:59 +0800</pubDate>
        
        <guid>https://blog.asukakyle.top/post/fft/</guid>
        <description>HolyK&#39;s Blog https://blog.asukakyle.top/post/fft/ -&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;快速傅里叶变换(Fast Fourier Transform，FFT)&lt;/code&gt;是一种可在 &lt;span class=&#34;math inline&#34;&gt;\(O(n \log n)\)&lt;/span&gt; 时间内完成的&lt;code&gt;离散傅里叶变换 (Discrete Fourier Transform，DFT)&lt;/code&gt; 的算法，用来实现将信号从原始域（通常是时间或空间）到频域的互相转化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;FFT 在算法竞赛中主要用来加速多项式乘法（循环卷积）。&lt;/p&gt;
&lt;h3 id=&#34;多项式&#34;&gt;多项式&lt;/h3&gt;
&lt;p&gt;形如 &lt;span class=&#34;math display&#34;&gt;\[
A(x) = a_0 + a_1x + a_2x^2 + \dots + a_{n-1}x^{n - 1}
\]&lt;/span&gt; 的式子称为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(n - 1\)&lt;/span&gt; 次多项式，其中 &lt;span class=&#34;math inline&#34;&gt;\(a_0, a_1, \dots, a_{n - 1}\)&lt;/span&gt; 称为多项式系数，&lt;span class=&#34;math inline&#34;&gt;\(n-1\)&lt;/span&gt; 称为多项式的次数，记为 &lt;span class=&#34;math inline&#34;&gt;\(\deg A(x)\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(\deg A\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;点值&#34;&gt;点值&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n - 1\)&lt;/span&gt; 次多项式 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(x = m\)&lt;/span&gt; 处的&lt;strong&gt;点值&lt;/strong&gt; &lt;span class=&#34;math display&#34;&gt;\[
A(m) = \sum_{k=0}^{n-1} a_km^k
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;多项式乘法&#34;&gt;多项式乘法&lt;/h3&gt;
&lt;p&gt;记 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\times B(x)\)&lt;/span&gt; 表示多项式 &lt;span class=&#34;math inline&#34;&gt;\(A(x), B(x)\)&lt;/span&gt; 做多项式乘法，可以简写为 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\cdot B(x)\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(A(x)B(x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;多项式乘法 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
C(x) = &amp;amp;A(x) \times B(x)\\
= &amp;amp;\left(a_0 + a_1x + \dots + a_{\deg A}x^{\deg A}\right)\cdot\left(b_0 + b_1x + \dots + b_{\deg B}x^{\deg B}\right)\\
= &amp;amp;\sum_{r = 0}^{\deg A + \deg B} \sum_{k = 0}^r a_kb_{r - k} x^r
\end{aligned}
\]&lt;/span&gt; 用系数关系可以表示为 &lt;span class=&#34;math display&#34;&gt;\[
c_r = \sum_{k = 0}^ra_kb_{r - k}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class=&#34;math inline&#34;&gt;\(\deg C = \deg A + \deg B\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;易证它们的点值满足如下关系 &lt;span class=&#34;math display&#34;&gt;\[
C(m) = A(m)B(m)
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;循环卷积&#34;&gt;循环卷积&lt;/h3&gt;
&lt;p&gt;记 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{conv}(A, B, n)\)&lt;/span&gt; 表示多项式 &lt;span class=&#34;math inline&#34;&gt;\(A(x), B(x)\)&lt;/span&gt; 做长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的循环卷积。&lt;/p&gt;
&lt;p&gt;循环卷积 &lt;span class=&#34;math display&#34;&gt;\[
C(x) = \operatorname{conv}(A, B, n)
\]&lt;/span&gt; 系数关系表示为 &lt;span class=&#34;math display&#34;&gt;\[
c_k = \sum_{p, q}[(p + q) \mod n = k]a_pb_q
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(\deg C = n - 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;容易发现，当 &lt;span class=&#34;math inline&#34;&gt;\(n &amp;gt; \deg A + \deg B\)&lt;/span&gt; 时，该运算等价于多项式乘法。&lt;/p&gt;
&lt;h3 id=&#34;dft&#34;&gt;DFT&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;离散傅里叶变换(Discrete Fourier Transform, DFT)&lt;/code&gt; 将多项式 &lt;span class=&#34;math inline&#34;&gt;\(A(x)=\sum_{k=0}^{n-1}a_kx^k\)&lt;/span&gt; 转换为一些特殊的点值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;记 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 次单位复根 &lt;span class=&#34;math display&#34;&gt;\[
\omega_n = e^{\frac{2i\pi}n}=\cos\dfrac{2\pi}{n}+i\sin\dfrac{2\pi}{n}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(DFT(A)\)&lt;/span&gt; 就是要计算点值 &lt;span class=&#34;math inline&#34;&gt;\(A(\omega_n^k), k = 0， 1， 2， \dots, n-1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;单位根自带的循环特性使得循环卷积 &lt;span class=&#34;math inline&#34;&gt;\(C(x) = \operatorname{conv}(A, B, n)\)&lt;/span&gt; 的点值也满足： &lt;span class=&#34;math display&#34;&gt;\[
C(\omega_n^k) = A(\omega_n^k)B(\omega_n^k)
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;idft&#34;&gt;IDFT&lt;/h3&gt;
&lt;p&gt;IDFT 是 DFT 的逆变换。&lt;/p&gt;
&lt;p&gt;首先，用等比数列求和易证： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\frac1n\sum_{k = 0}^{n - 1}\omega_n^{vk} &amp;amp;= [v \mod n = 0]
\end{aligned}
\]&lt;/span&gt; 考虑循环卷积 &lt;span class=&#34;math inline&#34;&gt;\(C(x) = \operatorname{conv}(A, B, n)\)&lt;/span&gt; 的系数表示 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
c_r = &amp;amp;\sum_{p, q}[(p + q) \mod n = r]a_pb_q\\
= &amp;amp;\sum_{p, q}[(p + q - r) \mod n = 0]a_pb_q\\
= &amp;amp;\sum_{p, q}\frac1n\sum_{k = 0}^{n - 1}\omega_n^{pk+qk-rk}a_pb_q\\
= &amp;amp;\sum_{p, q}\frac1n\sum_{k = 0}^{n - 1}\omega_n^{-rk}\cdot\omega_n^{pk}a_p\cdot\omega_n^{qk}b_q\\
= &amp;amp;\frac1n\sum_{k = 0}^{n - 1}\omega_n^{-rk}\left(\sum_{p}\omega_n^{pk}a_p\sum_q\omega_n^{qk}b_q\right)\\
= &amp;amp;\frac1n\sum_{k = 0}^{n - 1}\left(\omega_n^{-r}\right)^kA(\omega_n^k)B(\omega_n^k)\\
= &amp;amp;\frac1n\sum_{k = 0}^{n - 1}\left(\omega_n^{n-r}\right)^kC(\omega_n^k)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;设多项式 &lt;span class=&#34;math display&#34;&gt;\[
C&amp;#39;(x) = \sum_{k=0}^{n-1}C(\omega_n^k)x^k
\]&lt;/span&gt; 只要计算 &lt;span class=&#34;math inline&#34;&gt;\(DFT(C&amp;#39;)\)&lt;/span&gt; 即可得到 &lt;span class=&#34;math inline&#34;&gt;\(C(x)\)&lt;/span&gt; 的系数，于是我们用 DFT 完成了逆变换 IDFT。&lt;/p&gt;
&lt;p&gt;用两次 DFT 和一次 IDFT就可以计算 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{conv}(A, B, n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;暴力的复杂度是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;，此处不赘述。&lt;/p&gt;
&lt;h3 id=&#34;fft&#34;&gt;FFT&lt;/h3&gt;
&lt;p&gt;现在尝试将 DFT 问题分解以优化时间复杂度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本部分认为 &lt;span class=&#34;math inline&#34;&gt;\(n = \deg A + 1\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 的整数次幂。对于更一般的情况，暂不考虑。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;dif&#34;&gt;DIF&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;将序列 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 分成左右两半&lt;/strong&gt;。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
A(\omega_n^{r}) &amp;amp;= \sum_{k = 0}^{n-1}a_k\omega_n^{rk}\\
&amp;amp;= \sum_{k = 0}^{n / 2 - 1} \left(a_k\cdot\omega_n^{rk} + a_{k+n/2}\cdot\omega_n^{rk+rn/2}\right)\\
&amp;amp;= \sum_{k = 0}^{n / 2 - 1} \left[a_k\cdot\omega_n^{rk} + (-1)^r\cdot a_{k+n/2}\cdot\omega_n^{rk}\right]\\
&amp;amp;= \sum_{k = 0}^{n / 2 - 1} \left[a_k+(-1)^ra_{k+n/2}\right]\omega_{n}^{rk}
\end{aligned}
\]&lt;/span&gt; &lt;strong&gt;进一步，将 &lt;span class=&#34;math inline&#34;&gt;\(A(\omega_{n}^r)\)&lt;/span&gt; 按奇偶分类&lt;/strong&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
A\left(\omega_n^{2r}\right) &amp;amp;= \sum_{k=0}^{n/2-1}\left(a_k+a_{k+n/2}\right)\omega_{n/2}^{rk}\\
A\left(\omega_n^{2r+1}\right) &amp;amp;= \sum_{k=0}^{n/2-1}\left(\omega_{n}^ka_k-\omega_{n}^ka_{k+n/2}\right)\omega_{n/2}^{rk}
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;p_k=a_k+a_{k+n/2}, &amp;amp;P(x) = \sum_{k = 0}^{n/2-1}p_kx^k\\
&amp;amp;q_k=\omega_{n}^k(a_k-a_{k+n/2}), &amp;amp;Q(x) = \sum_{k=0}^{n/2-1}q_kx^k
\end{aligned}
\]&lt;/span&gt; 我们只需要求出 &lt;span class=&#34;math inline&#34;&gt;\(P(\omega_{n/2}^r)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(Q(\omega_{n/2}^r)\)&lt;/span&gt; ，即求解规模为原来一半的两个子问题 &lt;span class=&#34;math inline&#34;&gt;\(DFT(P), DFT(Q)\)&lt;/span&gt;，就能在 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 时间内计算出 &lt;span class=&#34;math inline&#34;&gt;\(DFT(A)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;dit&#34;&gt;DIT&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;在算法竞赛中这种方法更常见。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注意到在 &lt;code&gt;DIF&lt;/code&gt; 中我们最后将 &lt;span class=&#34;math inline&#34;&gt;\(A(\omega_n^r)\)&lt;/span&gt; 奇偶分类求解，那不妨思考&lt;strong&gt;将序列 &lt;span class=&#34;math inline&#34;&gt;\(a_k\)&lt;/span&gt; 按奇偶分类&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
A_0(x) = a_0 + a_2x + \dots + a_{n - 2}x^{n / 2}\\
A_1(x) = a_1 + a_3x+ \dots + a_{n - 1}x^{n / 2}
\end{aligned}
\]&lt;/span&gt; 则 &lt;span class=&#34;math display&#34;&gt;\[
A(x) = A_0(x^2) + xA_1(x^2)
\]&lt;/span&gt; 所以 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
A(\omega_n^k) &amp;amp;= A_0(\omega_n^{2k}) + \omega_n^kA_1(\omega_n^{2k})\\
&amp;amp;= A_0(\omega_{n/2}^k) + \omega_n^kA_1(\omega_{n/2}^k)
\end{aligned}
\]&lt;/span&gt; &lt;strong&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(A(\omega_n^k)\)&lt;/span&gt; 再细分为左右两半&lt;/strong&gt;，这里运用了等式 &lt;span class=&#34;math inline&#34;&gt;\(\omega_{n/2}^k = \omega_{n/2}^{k + n/2}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\omega_n^k+\omega_n{k+n/2} = 0\)&lt;/span&gt; : &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
A(\omega_n^k) &amp;amp;= A_0(\omega_{n/2}^k) + \omega_n^kA_1(\omega_{n/2}^k)\\
A\left(\omega_n^{k+n/2}\right) &amp;amp;= A_0(\omega_{n/2}^k) - \omega_n^kA_1(\omega_{n/2}^k)
\end{aligned}
\]&lt;/span&gt; 我们只需要求出 &lt;span class=&#34;math inline&#34;&gt;\(A_0(\omega_{n/2}^k)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(A_1(\omega_{n/2}^k)\)&lt;/span&gt; ，即求解规模为原来一半的两个子问题 &lt;span class=&#34;math inline&#34;&gt;\(DFT(A_0), DFT(A_1)\)&lt;/span&gt;，就能在 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 时间内计算出 &lt;span class=&#34;math inline&#34;&gt;\(DFT(A)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;complexity&#34;&gt;Complexity&lt;/h4&gt;
&lt;p&gt;设次数为 &lt;span class=&#34;math inline&#34;&gt;\(n - 1\)&lt;/span&gt; 的多项式做 DFT 的时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(T(n)\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
T(n) = 2T(\frac{n}{2}) + O(n)
\]&lt;/span&gt; 根据主定理 &lt;span class=&#34;math display&#34;&gt;\[
T(n) = O(n \log n)
\]&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;上述两种计算方式均可以使用递归实现，这里直接给出代码，不再赘述。 &lt;strong&gt;DIF&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; PI = acos(-&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dft(&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;Complex&amp;gt; &amp;amp;a) {&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = a.size(), m = n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;Complex&amp;gt; p(m), q(m);&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; m; i++) {&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    p[i] = a[i] + a[i + m];&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    q[i] = (a[i] - a[i + m]) * Complex(cos(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * PI * i / n), sin(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * PI * i / n));&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  dft(p), dft(q);&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; m; i++)&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    a[i &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = p[i], a[i &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = q[i];&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; idft(&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;Complex&amp;gt; &amp;amp;a) {&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  dft(a);&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;v: a) v.a /= a.size(), v.b /= a.size();&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;reverse(a.begin() + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a.end());&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;DIT&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; PI = acos(-&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dft(&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;Complex&amp;gt; &amp;amp;a) {&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = a.size(), m = n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;Complex&amp;gt; p(m), q(m);&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; m; i++) {&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    p[i] = a[i &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    q[i] = a[i &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  dft(p), dft(q);&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; m; i++) {&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    Complex &amp;amp;u = p[i], v = Complex(cos(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * PI * i / n), sin(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * PI * i / n)) * q[i];&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    a[i] = u + v, a[i + m] = u - v;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; idft(&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;Complex&amp;gt; &amp;amp;a) {&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  dft(a);&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;v: a) v.a /= a.size(), v.b /= a.size();&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;reverse(a.begin() + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a.end());&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面探讨以 &lt;strong&gt;非递归方式&lt;/strong&gt; 实现 &lt;code&gt;DIF&lt;/code&gt; 与 &lt;code&gt;DIT&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;dit-1&#34;&gt;DIT&lt;/h3&gt;
&lt;p&gt;由于 &lt;code&gt;DIT&lt;/code&gt; &lt;del&gt;更易于理解&lt;/del&gt;（其实只是资料多），先讲这个。&lt;/p&gt;
&lt;p&gt;考虑递归的过程： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;0. (a_0, a_1, a_2, a_3, a_4, a_5, a_6, a_7)\\
&amp;amp;1. (a_0, a_2, a_4, a_6)(a_1, a_3, a_5, a_7)\\
&amp;amp;2. (a_0, a_4)(a_2, a_6)(a_1, a_5)(a_3, a_7)\\
&amp;amp;3. (a_0)(a_4)(a_2)(a_6)(a_1)(a_5)(a_3)(a_7)\\
&amp;amp;2&amp;#39; (A_{00}, A_{01})(A_{10},A_{11})(A_{00},A_{01})(A_{10}, A_{11})\\
&amp;amp;1&amp;#39; (A_{00}, A_{01}, A_{02}, A_{03})(A_{10}, A_{11}, A_{12}, A_{13})\\
&amp;amp;0&amp;#39; (A_0, A_1, A_2, A_3, A_4, A_5, A_6, A_7)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;发现 &lt;span class=&#34;math inline&#34;&gt;\(0 \rightarrow 3\)&lt;/span&gt; 只是在重新安排数据位置，并没有修改数据，如果我们能把映射关系找到，那就可以一步到位，直接从 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 开始。&lt;/p&gt;
&lt;p&gt;设一个数在第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个阶段 &lt;span class=&#34;math inline&#34;&gt;\((0 \leq i \leq \log_2n)\)&lt;/span&gt; 的位置为 &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt;，相对位置为 &lt;span class=&#34;math inline&#34;&gt;\(p_i&amp;#39;\)&lt;/span&gt;（&lt;code&gt;相对位置&lt;/code&gt;指它在括号里的位置，例如上面第 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 阶段 &lt;span class=&#34;math inline&#34;&gt;\(a_1\)&lt;/span&gt; 的相对位置为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;容易发现 &lt;span class=&#34;math display&#34;&gt;\[
p&amp;#39;_i = p_i \mod \frac{n}{2^i}
\]&lt;/span&gt; &lt;span class=&#34;math display&#34;&gt;\[
p_{i + 1} = p_{i} - p&amp;#39;_i + 
\begin{cases}
\dfrac{n}{2^{i+1}}+\dfrac{p&amp;#39;_i-1}{2} &amp;amp; p_i&amp;#39; \equiv 1 \pmod 2\\
\dfrac{p&amp;#39;_i}{2} &amp;amp; p_i&amp;#39; \equiv 0 \pmod 2
\end{cases}
\]&lt;/span&gt; 如果将 &lt;span class=&#34;math inline&#34;&gt;\(p_0\)&lt;/span&gt; 写成二进制 &lt;span class=&#34;math inline&#34;&gt;\(\overline{b_4b_3b_2b_1b_0}\)&lt;/span&gt;（这里以 &lt;span class=&#34;math inline&#34;&gt;\(n = 32\)&lt;/span&gt; 为例），那么单次变化的过程相当于把二进制的后几位向右 &lt;code&gt;rotate&lt;/code&gt; 一位，总的变化过程可以描述为： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\overline{|b_4b_3b_2b_1b_0} \rightarrow \overline{|b_0b_4b_3b_2b_1} \\
\overline{b_0|b_4b_3b_2b_1} \rightarrow \overline{b_0|b_1b_4b_3b_2} \\
\overline{b_0b_1|b_4b_3b_2} \rightarrow \overline{b_0b_1|b_2b_4b_3} \\
\overline{b_0b_1b_2|b_4b_3} \rightarrow \overline{b_0b_1b_2|b_3b_4} \\
\overline{b_0b_1b_2b_3|b_4} \rightarrow \overline{b_0b_1b_2b_3|b_4}
\end{aligned}
\]&lt;/span&gt; 可以发现，整个过程实际上是在做 &lt;code&gt;reverse&lt;/code&gt; 操作！&lt;/p&gt;
&lt;p&gt;至此我们找到了映射关系，成功把前面的步骤都砍掉了，只剩回溯，可以改成循环。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dft(&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;Complex&amp;gt; &amp;amp;a) {&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = a.size();&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i++) {&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;gt; j) &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;swap(a[i], a[j]);&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; (j ^= k) &amp;lt; k; k &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; k &amp;lt; n; k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += k &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; j++) {&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; t = a[i + j + k] * Complex(cos(PI * j / k), sin(PI * j / k));&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        a[i + j + k] = a[i + j] - t;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        a[i + j] = a[i + j] + t;&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      }&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;dif-1&#34;&gt;DIF&lt;/h3&gt;
&lt;p&gt;这里先将递归版DIF的过程简单复述：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一步：将序列 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 对半分&lt;/strong&gt; &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;p_k=a_k+a_{k+n/2}, &amp;amp;P(x) = \sum_{k = 0}^{n/2-1}p_kx^k\\
&amp;amp;q_k=\omega_{n}^k(a_k-a_{k+n/2}), &amp;amp;Q(x) = \sum_{k=0}^{n/2-1}q_kx^k
\end{aligned}
\]&lt;/span&gt; &lt;strong&gt;第二步：递归计算 &lt;span class=&#34;math inline&#34;&gt;\(DFT(p), DFT(q)\)&lt;/span&gt;&lt;/strong&gt; &lt;strong&gt;第三步：重新安排数据位置&lt;/strong&gt; &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
A\left(\omega_n^{2r}\right) &amp;amp;= P(\omega_{n/2}^r)\\
A\left(\omega_n^{2r+1}\right) &amp;amp;= Q(\omega_{n/2}^r)
\end{aligned}
\]&lt;/span&gt; 发现回溯的过程（即第三步）实际上也只是在重新安排数据存储的位置，而且是上面 &lt;span class=&#34;math inline&#34;&gt;\(DIT\)&lt;/span&gt; 第一步的逆过程，所以就是位翻转的逆过程，所以还是位翻转。&lt;/p&gt;
&lt;p&gt;所以最后安排数据位置可以一步搞定，只剩递归压栈的过程，可以改成循环。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dft(vector&amp;lt;Complex&amp;gt; &amp;amp;a) {&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = a.size();&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; k; k &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += k &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; j++) {&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; t = a[i + j + k];&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        a[i + j + k] = (a[i + j] - t) * Complex(cos(PI * j / k), sin(PI * j / k));&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        a[i + j] = a[i + j] + t;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      }&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i++) {&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;gt; j) &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;swap(a[i], a[j]);&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; (j ^= k) &amp;lt; k; k &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;combination&#34;&gt;Combination&lt;/h3&gt;
&lt;p&gt;发现 &lt;span class=&#34;math inline&#34;&gt;\(DIF\)&lt;/span&gt; 的最后一步和 &lt;span class=&#34;math inline&#34;&gt;\(DIT\)&lt;/span&gt; 的第一步都是位翻转，所以先 &lt;span class=&#34;math inline&#34;&gt;\(DIF\)&lt;/span&gt; 再 &lt;span class=&#34;math inline&#34;&gt;\(DIT\)&lt;/span&gt;，就可以省略位翻转。&lt;/p&gt;
&lt;p&gt;完整代码&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; readInt(T &amp;amp;w) {&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c, p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c = getchar())) p = c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (w = c &amp;amp; &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;; isdigit(c = getchar());) w = w * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + (c &amp;amp; &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p) w = -w;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Complex {&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; a, b; &lt;span class=&#34;co&#34;&gt;// a + bi&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  Complex(&lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; a = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; b = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;): a(a), b(b) {}&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; Complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Complex &amp;amp;p, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Complex &amp;amp;q) {&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Complex(p.a + q.a, p.b + q.b);&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; Complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Complex &amp;amp;p, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Complex &amp;amp;q) {&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Complex(p.a - q.a, p.b - q.b);&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; Complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Complex &amp;amp;p, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Complex &amp;amp;q) {&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Complex(p.a * q.a - p.b * q.b, p.a * q.b + p.b * q.a);&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; PI = acos(-&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dft(&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;Complex&amp;gt; &amp;amp;a) {&lt;/span&gt;
&lt;span id=&#34;cb5-27&#34;&gt;&lt;a href=&#34;#cb5-27&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = a.size();&lt;/span&gt;
&lt;span id=&#34;cb5-28&#34;&gt;&lt;a href=&#34;#cb5-28&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; k; k &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-29&#34;&gt;&lt;a href=&#34;#cb5-29&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += k &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-30&#34;&gt;&lt;a href=&#34;#cb5-30&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; j++) {&lt;/span&gt;
&lt;span id=&#34;cb5-31&#34;&gt;&lt;a href=&#34;#cb5-31&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; t = a[i + j + k];&lt;/span&gt;
&lt;span id=&#34;cb5-32&#34;&gt;&lt;a href=&#34;#cb5-32&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        a[i + j + k] = (a[i + j] - t) * Complex(cos(PI * j / k), sin(PI * j / k));&lt;/span&gt;
&lt;span id=&#34;cb5-33&#34;&gt;&lt;a href=&#34;#cb5-33&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        a[i + j] = a[i + j] + t;&lt;/span&gt;
&lt;span id=&#34;cb5-34&#34;&gt;&lt;a href=&#34;#cb5-34&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      }&lt;/span&gt;
&lt;span id=&#34;cb5-35&#34;&gt;&lt;a href=&#34;#cb5-35&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-36&#34;&gt;&lt;a href=&#34;#cb5-36&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb5-37&#34;&gt;&lt;a href=&#34;#cb5-37&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-38&#34;&gt;&lt;a href=&#34;#cb5-38&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; idft(&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;Complex&amp;gt; &amp;amp;a) {&lt;/span&gt;
&lt;span id=&#34;cb5-39&#34;&gt;&lt;a href=&#34;#cb5-39&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = a.size();&lt;/span&gt;
&lt;span id=&#34;cb5-40&#34;&gt;&lt;a href=&#34;#cb5-40&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; k &amp;lt; n; k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-41&#34;&gt;&lt;a href=&#34;#cb5-41&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += k &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-42&#34;&gt;&lt;a href=&#34;#cb5-42&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; j++) {&lt;/span&gt;
&lt;span id=&#34;cb5-43&#34;&gt;&lt;a href=&#34;#cb5-43&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; t = a[i + j + k] * Complex(cos(PI * j / k), sin(PI * j / k));&lt;/span&gt;
&lt;span id=&#34;cb5-44&#34;&gt;&lt;a href=&#34;#cb5-44&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        a[i + j + k] = a[i + j] - t;&lt;/span&gt;
&lt;span id=&#34;cb5-45&#34;&gt;&lt;a href=&#34;#cb5-45&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        a[i + j] = a[i + j] + t;&lt;/span&gt;
&lt;span id=&#34;cb5-46&#34;&gt;&lt;a href=&#34;#cb5-46&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      }&lt;/span&gt;
&lt;span id=&#34;cb5-47&#34;&gt;&lt;a href=&#34;#cb5-47&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-48&#34;&gt;&lt;a href=&#34;#cb5-48&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb5-49&#34;&gt;&lt;a href=&#34;#cb5-49&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;v: a) v.a /= a.size(), v.b /= a.size();&lt;/span&gt;
&lt;span id=&#34;cb5-50&#34;&gt;&lt;a href=&#34;#cb5-50&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;reverse(a.begin() + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a.end());&lt;/span&gt;
&lt;span id=&#34;cb5-51&#34;&gt;&lt;a href=&#34;#cb5-51&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-52&#34;&gt;&lt;a href=&#34;#cb5-52&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb5-53&#34;&gt;&lt;a href=&#34;#cb5-53&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, k;&lt;/span&gt;
&lt;span id=&#34;cb5-54&#34;&gt;&lt;a href=&#34;#cb5-54&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  readInt(n), readInt(m);&lt;/span&gt;
&lt;span id=&#34;cb5-55&#34;&gt;&lt;a href=&#34;#cb5-55&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;__lg(n + m) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-56&#34;&gt;&lt;a href=&#34;#cb5-56&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;Complex&amp;gt; a(k), b(k), c(k);&lt;/span&gt;
&lt;span id=&#34;cb5-57&#34;&gt;&lt;a href=&#34;#cb5-57&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= n; i++) readInt(a[i].a);&lt;/span&gt;
&lt;span id=&#34;cb5-58&#34;&gt;&lt;a href=&#34;#cb5-58&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= m; i++) readInt(b[i].a);&lt;/span&gt;
&lt;span id=&#34;cb5-59&#34;&gt;&lt;a href=&#34;#cb5-59&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  dft(a), dft(b);&lt;/span&gt;
&lt;span id=&#34;cb5-60&#34;&gt;&lt;a href=&#34;#cb5-60&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; k; i++) c[i] = a[i] * b[i];&lt;/span&gt;
&lt;span id=&#34;cb5-61&#34;&gt;&lt;a href=&#34;#cb5-61&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  idft(c);&lt;/span&gt;
&lt;span id=&#34;cb5-62&#34;&gt;&lt;a href=&#34;#cb5-62&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= n + m; i++) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(c[i].a + &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb5-63&#34;&gt;&lt;a href=&#34;#cb5-63&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-64&#34;&gt;&lt;a href=&#34;#cb5-64&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;number-theory-transform&#34;&gt;Number Theory Transform&lt;/h2&gt;
&lt;p&gt;如果一个质数存在 &lt;span class=&#34;math inline&#34;&gt;\(2^n\)&lt;/span&gt; 次单位根（其中 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 最大时的单位根称为原根），那么在这个质数的剩余系下上面的结论依旧成立，可以使用FFT，多称这种FFT为&lt;code&gt;快速数论变换(Number Theory Transform, NTT)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;常见的质数是 &lt;span class=&#34;math inline&#34;&gt;\(P = 998244353\)&lt;/span&gt;，它的原根 &lt;span class=&#34;math inline&#34;&gt;\(g = 3\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;代码（预处理单位根，较好地平衡了代码复杂度和常数且有一定的封装度）：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; readInt(T &amp;amp;w) {&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c, p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c = getchar())) p = c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (w = c &amp;amp; &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;; isdigit(c = getchar());) w = w * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + (c &amp;amp; &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p) w = -w;&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T, &lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt;... U&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; readInt(T &amp;amp;w, U &amp;amp;... a) { readInt(w), readInt(a...); }&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;constexpr&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; P(&lt;span class=&#34;dv&#34;&gt;998244353&lt;/span&gt;), G(&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; inc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) { (x += y) &amp;gt;= P ? x -= P : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; }&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; sum(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x + y &amp;gt;= P ? x + y - P : x + y; }&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; sub(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x - y &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; ? x - y + P : x - y; }&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fpow(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = P - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; k; k &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; * x * x % P)&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) r = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; * r * x % P;&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; r;&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; Polynomial {&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; Polynom = &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; w;&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getOmega(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  w.resize(k);&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  w[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; base = fpow(G, (P - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / (k &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt; k; i++) w[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; * w[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * base % P;&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dft(Polynom &amp;amp;a) {&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; k; k &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    getOmega(k);&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += k &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-38&#34;&gt;&lt;a href=&#34;#cb6-38&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; j++) {&lt;/span&gt;
&lt;span id=&#34;cb6-39&#34;&gt;&lt;a href=&#34;#cb6-39&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y = a[i + j + k];&lt;/span&gt;
&lt;span id=&#34;cb6-40&#34;&gt;&lt;a href=&#34;#cb6-40&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        a[i + j + k] = (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; * a[i + j] - y + P) * w[j] % P;&lt;/span&gt;
&lt;span id=&#34;cb6-41&#34;&gt;&lt;a href=&#34;#cb6-41&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        inc(a[i + j], y);&lt;/span&gt;
&lt;span id=&#34;cb6-42&#34;&gt;&lt;a href=&#34;#cb6-42&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      }&lt;/span&gt;
&lt;span id=&#34;cb6-43&#34;&gt;&lt;a href=&#34;#cb6-43&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-44&#34;&gt;&lt;a href=&#34;#cb6-44&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb6-45&#34;&gt;&lt;a href=&#34;#cb6-45&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-46&#34;&gt;&lt;a href=&#34;#cb6-46&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; idft(Polynom &amp;amp;a) {&lt;/span&gt;
&lt;span id=&#34;cb6-47&#34;&gt;&lt;a href=&#34;#cb6-47&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; k &amp;lt; n; k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-48&#34;&gt;&lt;a href=&#34;#cb6-48&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    getOmega(k);&lt;/span&gt;
&lt;span id=&#34;cb6-49&#34;&gt;&lt;a href=&#34;#cb6-49&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += k &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-50&#34;&gt;&lt;a href=&#34;#cb6-50&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; j++) {&lt;/span&gt;
&lt;span id=&#34;cb6-51&#34;&gt;&lt;a href=&#34;#cb6-51&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = a[i + j], y = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; * a[i + j + k] * w[j] % P;&lt;/span&gt;
&lt;span id=&#34;cb6-52&#34;&gt;&lt;a href=&#34;#cb6-52&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        a[i + j] = sum(x, y);&lt;/span&gt;
&lt;span id=&#34;cb6-53&#34;&gt;&lt;a href=&#34;#cb6-53&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        a[i + j + k] = sub(x, y);&lt;/span&gt;
&lt;span id=&#34;cb6-54&#34;&gt;&lt;a href=&#34;#cb6-54&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      }&lt;/span&gt;
&lt;span id=&#34;cb6-55&#34;&gt;&lt;a href=&#34;#cb6-55&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-56&#34;&gt;&lt;a href=&#34;#cb6-56&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb6-57&#34;&gt;&lt;a href=&#34;#cb6-57&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; inv = fpow(n);&lt;/span&gt;
&lt;span id=&#34;cb6-58&#34;&gt;&lt;a href=&#34;#cb6-58&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i++) a[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; * a[i] * inv % P;&lt;/span&gt;
&lt;span id=&#34;cb6-59&#34;&gt;&lt;a href=&#34;#cb6-59&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;reverse(a.begin() + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a.end());&lt;/span&gt;
&lt;span id=&#34;cb6-60&#34;&gt;&lt;a href=&#34;#cb6-60&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-61&#34;&gt;&lt;a href=&#34;#cb6-61&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;} &lt;span class=&#34;co&#34;&gt;// namespace Polynom&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-62&#34;&gt;&lt;a href=&#34;#cb6-62&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; Polynomial::dft;&lt;/span&gt;
&lt;span id=&#34;cb6-63&#34;&gt;&lt;a href=&#34;#cb6-63&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; Polynomial::idft;&lt;/span&gt;
&lt;span id=&#34;cb6-64&#34;&gt;&lt;a href=&#34;#cb6-64&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; poly_multiply(&lt;span class=&#34;dt&#34;&gt;unsigned&lt;/span&gt; *A, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;unsigned&lt;/span&gt; *B, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;unsigned&lt;/span&gt; *C) {&lt;/span&gt;
&lt;span id=&#34;cb6-65&#34;&gt;&lt;a href=&#34;#cb6-65&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = Polynomial::n = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;__lg(n + m) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-66&#34;&gt;&lt;a href=&#34;#cb6-66&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; a(k), b(k);&lt;/span&gt;
&lt;span id=&#34;cb6-67&#34;&gt;&lt;a href=&#34;#cb6-67&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= n; i++) a[i] = A[i];&lt;/span&gt;
&lt;span id=&#34;cb6-68&#34;&gt;&lt;a href=&#34;#cb6-68&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= m; i++) b[i] = B[i];&lt;/span&gt;
&lt;span id=&#34;cb6-69&#34;&gt;&lt;a href=&#34;#cb6-69&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  dft(a), dft(b);&lt;/span&gt;
&lt;span id=&#34;cb6-70&#34;&gt;&lt;a href=&#34;#cb6-70&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; k; i++) a[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; * a[i] * b[i] % P;&lt;/span&gt;
&lt;span id=&#34;cb6-71&#34;&gt;&lt;a href=&#34;#cb6-71&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  idft(a);&lt;/span&gt;
&lt;span id=&#34;cb6-72&#34;&gt;&lt;a href=&#34;#cb6-72&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= n + m; i++) C[i] = a[i];&lt;/span&gt;
&lt;span id=&#34;cb6-73&#34;&gt;&lt;a href=&#34;#cb6-73&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-74&#34;&gt;&lt;a href=&#34;#cb6-74&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb6-75&#34;&gt;&lt;a href=&#34;#cb6-75&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, k;&lt;/span&gt;
&lt;span id=&#34;cb6-76&#34;&gt;&lt;a href=&#34;#cb6-76&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  readInt(n, m);&lt;/span&gt;
&lt;span id=&#34;cb6-77&#34;&gt;&lt;a href=&#34;#cb6-77&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  Polynomial::n = k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;__lg(n + m) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-78&#34;&gt;&lt;a href=&#34;#cb6-78&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; a(k), b(k);&lt;/span&gt;
&lt;span id=&#34;cb6-79&#34;&gt;&lt;a href=&#34;#cb6-79&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= n; i++) readInt(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb6-80&#34;&gt;&lt;a href=&#34;#cb6-80&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= m; i++) readInt(b[i]);&lt;/span&gt;
&lt;span id=&#34;cb6-81&#34;&gt;&lt;a href=&#34;#cb6-81&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  dft(a), dft(b);&lt;/span&gt;
&lt;span id=&#34;cb6-82&#34;&gt;&lt;a href=&#34;#cb6-82&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; k; i++) a[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; * a[i] * b[i] % P;&lt;/span&gt;
&lt;span id=&#34;cb6-83&#34;&gt;&lt;a href=&#34;#cb6-83&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  idft(a);&lt;/span&gt;
&lt;span id=&#34;cb6-84&#34;&gt;&lt;a href=&#34;#cb6-84&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= n + m; i++) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, a[i]);&lt;/span&gt;
&lt;span id=&#34;cb6-85&#34;&gt;&lt;a href=&#34;#cb6-85&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-86&#34;&gt;&lt;a href=&#34;#cb6-86&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;bluesteins-algorithm&#34;&gt;Bluestein’s Algorithm&lt;/h2&gt;
&lt;p&gt;上面提到的 FFT 算法虽然限制了 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为 2 的次幂，但在大多数情况下已经足够解决问题。&lt;/p&gt;
&lt;p&gt;对于更一般的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 需要用到 &lt;code&gt;Bluestein’s Algorithm&lt;/code&gt; ，可以参考2016年国家集训队论文《再探快速傅里叶变换——毛啸》。&lt;/p&gt;
&lt;p&gt;后续可能会填这个坑。&lt;/p&gt;
- https://blog.asukakyle.top/post/fft/ - MIT</description>
        </item>
    
    
    
        <item>
        <title>Hello, World</title>
        <link>https://blog.asukakyle.top/post/hello-world/</link>
        <pubDate>Sat, 13 Mar 2021 11:36:40 +0800</pubDate>
        
        <guid>https://blog.asukakyle.top/post/hello-world/</guid>
        <description>HolyK&#39;s Blog https://blog.asukakyle.top/post/hello-world/ -&lt;p&gt;新博客开通。&lt;/p&gt;
&lt;p&gt;原博客 https://www.cnblogs.com/HolyK/&lt;/p&gt;
- https://blog.asukakyle.top/post/hello-world/ - MIT</description>
        </item>
    
    
    
        <item>
        <title>[Codeforces1148H] Holy Diver</title>
        <link>https://blog.asukakyle.top/post/codeforces1148h-holy-diver/</link>
        <pubDate>Sat, 13 Mar 2021 00:43:08 +0800</pubDate>
        
        <guid>https://blog.asukakyle.top/post/codeforces1148h-holy-diver/</guid>
        <description>HolyK&#39;s Blog https://blog.asukakyle.top/post/codeforces1148h-holy-diver/ -&lt;blockquote&gt;
&lt;p&gt;给定一个最初为空的数组，然后进行 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 次操作，每次操作给定 &lt;span class=&#34;math inline&#34;&gt;\(x,l,r,k\)&lt;/span&gt;，在数组末尾插入 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; ，然后查询满足 &lt;span class=&#34;math inline&#34;&gt;\(mex(\{a_i, a_{i + 1}, \dots, a_j\}) = k\)&lt;/span&gt; 的数对 &lt;span class=&#34;math inline&#34;&gt;\((i,j)\)&lt;/span&gt; 的个数，&lt;strong&gt;强制在线&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(mex(S)\)&lt;/span&gt; 表示集合 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 中最小的未出现的 &lt;strong&gt;自然数&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n \leq 2 \times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为表示方便，下面记 &lt;span class=&#34;math inline&#34;&gt;\(mex(i, j) = mex(\{a_i, a_{i + 1}, \dots, a_j\})\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;容易发现，如果向集合 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 中添加数，&lt;span class=&#34;math inline&#34;&gt;\(mex(S)\)&lt;/span&gt; 不会减小。&lt;/p&gt;
&lt;p&gt;所以如果固定右端点 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(mex(i, j)\)&lt;/span&gt; 是&lt;strong&gt;非严格单调减&lt;/strong&gt;的；固定左端点 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(mex(i, j)\)&lt;/span&gt; 是&lt;strong&gt;非严格单调增&lt;/strong&gt;的。&lt;/p&gt;
&lt;p&gt;维护一个 &lt;span class=&#34;math inline&#34;&gt;\(n \times n\)&lt;/span&gt; 矩阵，&lt;span class=&#34;math inline&#34;&gt;\(A[i][j] = mex(j, i)\)&lt;/span&gt;，则矩阵 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 的每一行从左到右都是非严格单调减的，每一列从上到下都是非严格单调增的。&lt;/p&gt;
&lt;p&gt;第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 次操作增加一个数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，考虑从第 &lt;span class=&#34;math inline&#34;&gt;\(i - 1\)&lt;/span&gt; 行拓展到第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 行时矩阵 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 的变化。&lt;/p&gt;
&lt;p&gt;首先 &lt;span class=&#34;math inline&#34;&gt;\(A[i][i]=[x=0]\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;下面只考虑 &lt;span class=&#34;math inline&#34;&gt;\(j &amp;lt; i\)&lt;/span&gt; 的情况。&lt;/p&gt;
&lt;p&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(A[i-1][j]=x\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(A[i][j]&amp;gt;x\)&lt;/span&gt;，否则 &lt;span class=&#34;math inline&#34;&gt;\(A[i][j] = A[i - 1][j]\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;所以每次变化的只有等于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的那些位置，根据单调性，这是一段区间，记为 &lt;span class=&#34;math inline&#34;&gt;\([p,q]\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(j \in [p, q]\)&lt;/span&gt;，要求 &lt;span class=&#34;math inline&#34;&gt;\(mex(j, i)\)&lt;/span&gt;，只需要知道最后一次出现的位置小于 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的最小的数。所以用线段树维护序列 &lt;span class=&#34;math inline&#34;&gt;\(seq_{lastpos[x]} = x\)&lt;/span&gt; ，每次求区间最小值，找到对应位置 &lt;span class=&#34;math inline&#34;&gt;\(index\)&lt;/span&gt;，这个位置右边的所有 &lt;span class=&#34;math inline&#34;&gt;\(A[i][j]\)&lt;/span&gt; 都等于这个最小值，然后令 &lt;span class=&#34;math inline&#34;&gt;\(q = index\)&lt;/span&gt;，反复迭代，直到待求区间为空。&lt;/p&gt;
&lt;p&gt;分析一下这个操作的复杂度，每次相当于删除一个区间 &lt;span class=&#34;math inline&#34;&gt;\([p,q]\)&lt;/span&gt;，添加若干个小区间。&lt;/p&gt;
&lt;p&gt;开始只有一个区间，最后的区间数不超过 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，中间只会删除最多 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 次区间。&lt;/p&gt;
&lt;p&gt;所以添加区间的总次数不会超过 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; ，复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n \log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后考虑回答询问。&lt;/p&gt;
&lt;h2 id=&#34;矩形交的面积&#34;&gt;矩形交的面积&lt;/h2&gt;
&lt;p&gt;我们用四元组 &lt;span class=&#34;math inline&#34;&gt;\((top,bottom,left,right)\)&lt;/span&gt; 描述一个矩形 &lt;span class=&#34;math inline&#34;&gt;\(\{(i,j):top \leq i \leq bottom,left \leq j \leq right\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;每次询问可以看作是询问矩形 &lt;span class=&#34;math inline&#34;&gt;\((l, r, l, r)\)&lt;/span&gt; 内 &lt;span class=&#34;math inline&#34;&gt;\(A[i][j]=k\)&lt;/span&gt; 的个数。&lt;/p&gt;
&lt;p&gt;那么由上面 &lt;span class=&#34;math inline&#34;&gt;\(mex\)&lt;/span&gt; 的单调性可以发现，&lt;span class=&#34;math inline&#34;&gt;\(A[i][j] = k\)&lt;/span&gt; 的点可以组成一个个连通块，每个连通块由若干个矩形构成&lt;strong&gt;阶梯状&lt;/strong&gt;（矩形的 &lt;span class=&#34;math inline&#34;&gt;\(left\)&lt;/span&gt; 相同，&lt;span class=&#34;math inline&#34;&gt;\(right\)&lt;/span&gt; 递增）。 且前一个连通块的 &lt;span class=&#34;math inline&#34;&gt;\(right\)&lt;/span&gt; 小于后一个连通块的 &lt;span class=&#34;math inline&#34;&gt;\(left\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;问题转化为求这些矩形与询问矩形交的面积之和。&lt;/p&gt;
&lt;p&gt;用 &lt;code&gt;std::vector&lt;/code&gt; 存下每个 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的所有矩形，维护前缀面积和，二分出相交与非相交的临界点，对于完全包含的用前缀和搞定，对于相交却不包含的，由于是阶梯状，所以也可以 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 计算，细节有点多。&lt;/p&gt;
&lt;p&gt;由上面的复杂度分析可知，所有矩形的数量不会超过 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 个，所以总复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n \log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#ifdef LOCAL&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define dbg&lt;/span&gt;(args...)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cerr &amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;[32;1m&amp;quot;&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; #&lt;/span&gt;args&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot; -&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;err(args)&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define dbg&lt;/span&gt;(...)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#endif&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; err() { &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cerr &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;[0m&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;; }&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T, &lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt;... U&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; err(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;x, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; U &amp;amp;... a) { &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cerr &amp;lt;&amp;lt; x &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;; err(a...); }&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; readInt(T &amp;amp;w) {&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c, p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c = getchar())) p = c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (w = c &amp;amp; &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;; isdigit(c = getchar());) w = w * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + (c &amp;amp; &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p) w = -w;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T, &lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt;... U&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; readInt(T &amp;amp;w, U &amp;amp;... a) { readInt(w), readInt(a...); }&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T, &lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; U&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; smin(T &amp;amp;x, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; U &amp;amp;y) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; y &amp;lt; x ? x = y, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; }&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T, &lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; U&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; smax(T &amp;amp;x, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; U &amp;amp;y) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x &amp;lt; y ? x = y, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; }&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; LL;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; PII;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;constexpr&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; N(&lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Rect {&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t, b, l, r; &lt;span class=&#34;co&#34;&gt;// top, bottem, left, right (closed intervals)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  Rect(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r): t(t), b(b), l(l), r(r) {}&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; Rect &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;&amp;amp;(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Rect &amp;amp;rhs) &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Rect(&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;max(t, rhs.t), &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;min(b, rhs.b), &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;max(l, rhs.l), &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;min(r, rhs.r));&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; LL area() &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; * &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;max(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, b - t + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;max(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;); }&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos[N];&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;Rect&amp;gt; rect[N]; &lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;LL&amp;gt; sum[N];&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; SegTree {&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define ls &lt;/span&gt;o&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define rs &lt;/span&gt;o&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min[N &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; update(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l == r) {&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    min[o] = y; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m = l + r &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  x &amp;lt;= m ? update(ls, l, m, x, y) : update(rs, m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, x, y);&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  min[o] = &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;min(min[ls], min[rs]);&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ask(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt; l) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r &amp;lt;= x) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; min[o];&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m = l + r &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;min(ask(ls, l, m, x), ask(rs, m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, x));&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; vis[N];&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;set&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; s;&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;PII now[N]; &lt;span class=&#34;co&#34;&gt;// interval&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; top[N];&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) {&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s.count(v)) {&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (top[v] == i) {&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;ot&#34;&gt;assert&lt;/span&gt;(l == now[v].second + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      now[v].second = r;&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-73&#34;&gt;&lt;a href=&#34;#cb1-73&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    l = now[v].first;&lt;/span&gt;
&lt;span id=&#34;cb1-74&#34;&gt;&lt;a href=&#34;#cb1-74&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    rect[v].emplace_back(top[v], i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, now[v].first, now[v].second);&lt;/span&gt;
&lt;span id=&#34;cb1-75&#34;&gt;&lt;a href=&#34;#cb1-75&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    sum[v].push_back(sum[v].back() + rect[v].back().area());&lt;/span&gt;
&lt;span id=&#34;cb1-76&#34;&gt;&lt;a href=&#34;#cb1-76&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb1-77&#34;&gt;&lt;a href=&#34;#cb1-77&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    s.insert(v);&lt;/span&gt;
&lt;span id=&#34;cb1-78&#34;&gt;&lt;a href=&#34;#cb1-78&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb1-79&#34;&gt;&lt;a href=&#34;#cb1-79&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  top[v] = i, now[v].first = l, now[v].second = r;&lt;/span&gt;
&lt;span id=&#34;cb1-80&#34;&gt;&lt;a href=&#34;#cb1-80&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-81&#34;&gt;&lt;a href=&#34;#cb1-81&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-82&#34;&gt;&lt;a href=&#34;#cb1-82&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  readInt(n);&lt;/span&gt;
&lt;span id=&#34;cb1-83&#34;&gt;&lt;a href=&#34;#cb1-83&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= n; i++) rect[i].emplace_back(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), sum[i].push_back(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-84&#34;&gt;&lt;a href=&#34;#cb1-84&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  LL ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-85&#34;&gt;&lt;a href=&#34;#cb1-85&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i  = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, mex = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x, l, r, k; i &amp;lt;= n; i++) {&lt;/span&gt;
&lt;span id=&#34;cb1-86&#34;&gt;&lt;a href=&#34;#cb1-86&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    readInt(x, l, r, k);&lt;/span&gt;
&lt;span id=&#34;cb1-87&#34;&gt;&lt;a href=&#34;#cb1-87&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    x = (x + ans) % (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-88&#34;&gt;&lt;a href=&#34;#cb1-88&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    l = (l + ans) % i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-89&#34;&gt;&lt;a href=&#34;#cb1-89&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    r = (r + ans) % i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-90&#34;&gt;&lt;a href=&#34;#cb1-90&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    k = (k + ans) % (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-91&#34;&gt;&lt;a href=&#34;#cb1-91&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l &amp;gt; r) &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;swap(l, r);&lt;/span&gt;
&lt;span id=&#34;cb1-92&#34;&gt;&lt;a href=&#34;#cb1-92&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    dbg(x, l, r, k);&lt;/span&gt;
&lt;span id=&#34;cb1-93&#34;&gt;&lt;a href=&#34;#cb1-93&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;co&#34;&gt;// append x&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-94&#34;&gt;&lt;a href=&#34;#cb1-94&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (vis[x] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; vis[mex]; mex++) ;&lt;/span&gt;
&lt;span id=&#34;cb1-95&#34;&gt;&lt;a href=&#34;#cb1-95&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    SegTree::update(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, i, x);&lt;/span&gt;
&lt;span id=&#34;cb1-96&#34;&gt;&lt;a href=&#34;#cb1-96&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (pos[x]) SegTree::update(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, pos[x], n);&lt;/span&gt;
&lt;span id=&#34;cb1-97&#34;&gt;&lt;a href=&#34;#cb1-97&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    pos[x] = i;&lt;/span&gt;
&lt;span id=&#34;cb1-98&#34;&gt;&lt;a href=&#34;#cb1-98&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; it = s.find(x);&lt;/span&gt;
&lt;span id=&#34;cb1-99&#34;&gt;&lt;a href=&#34;#cb1-99&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (it != s.end()) {&lt;/span&gt;
&lt;span id=&#34;cb1-100&#34;&gt;&lt;a href=&#34;#cb1-100&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      s.erase(it);&lt;/span&gt;
&lt;span id=&#34;cb1-101&#34;&gt;&lt;a href=&#34;#cb1-101&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; [p, q] = now[x];&lt;/span&gt;
&lt;span id=&#34;cb1-102&#34;&gt;&lt;a href=&#34;#cb1-102&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      rect[x].emplace_back(top[x], i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p, q);&lt;/span&gt;
&lt;span id=&#34;cb1-103&#34;&gt;&lt;a href=&#34;#cb1-103&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      sum[x].push_back(sum[x].back() + rect[x].back().area());&lt;/span&gt;
&lt;span id=&#34;cb1-104&#34;&gt;&lt;a href=&#34;#cb1-104&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (p &amp;lt;= q) {&lt;/span&gt;
&lt;span id=&#34;cb1-105&#34;&gt;&lt;a href=&#34;#cb1-105&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = SegTree::ask(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, q - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), idx = smin(v, mex) ? &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; : pos[v];&lt;/span&gt;
&lt;span id=&#34;cb1-106&#34;&gt;&lt;a href=&#34;#cb1-106&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;co&#34;&gt;// dbg(v, pos[v]);&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-107&#34;&gt;&lt;a href=&#34;#cb1-107&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        insert(i, v, idx + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, q);&lt;/span&gt;
&lt;span id=&#34;cb1-108&#34;&gt;&lt;a href=&#34;#cb1-108&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        q = idx;&lt;/span&gt;
&lt;span id=&#34;cb1-109&#34;&gt;&lt;a href=&#34;#cb1-109&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      }&lt;/span&gt;
&lt;span id=&#34;cb1-110&#34;&gt;&lt;a href=&#34;#cb1-110&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-111&#34;&gt;&lt;a href=&#34;#cb1-111&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    insert(i, !x, i, i);&lt;/span&gt;
&lt;span id=&#34;cb1-112&#34;&gt;&lt;a href=&#34;#cb1-112&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;co&#34;&gt;// ask k&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-113&#34;&gt;&lt;a href=&#34;#cb1-113&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;a = rect[k];&lt;/span&gt;
&lt;span id=&#34;cb1-114&#34;&gt;&lt;a href=&#34;#cb1-114&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;b = sum[k];&lt;/span&gt;
&lt;span id=&#34;cb1-115&#34;&gt;&lt;a href=&#34;#cb1-115&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; qrect = Rect(l, r, l, r);&lt;/span&gt;
&lt;span id=&#34;cb1-116&#34;&gt;&lt;a href=&#34;#cb1-116&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-117&#34;&gt;&lt;a href=&#34;#cb1-117&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;co&#34;&gt;// for (auto u: a) ans += (u &amp;amp; qrect).area();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-118&#34;&gt;&lt;a href=&#34;#cb1-118&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;partition_point(a.begin(), a.end(), [&amp;amp;](&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Rect &amp;amp;v) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; v.b &amp;lt; l || v.r &amp;lt; l; }) - a.begin();&lt;/span&gt;
&lt;span id=&#34;cb1-119&#34;&gt;&lt;a href=&#34;#cb1-119&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mp = &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;partition_point(a.begin(), a.end(), [&amp;amp;](&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Rect &amp;amp;v) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; v.l &amp;lt; l; }) - a.begin() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-120&#34;&gt;&lt;a href=&#34;#cb1-120&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mq = &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;partition_point(a.begin(), a.end(), [&amp;amp;](&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Rect &amp;amp;v) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; v.l &amp;lt;= r; }) - a.begin() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-121&#34;&gt;&lt;a href=&#34;#cb1-121&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q = &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;partition_point(a.begin(), a.end(), [&amp;amp;](&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Rect &amp;amp;v) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; v.t &amp;lt;= r &amp;amp;&amp;amp; v.l &amp;lt;= r; }) - a.begin() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-122&#34;&gt;&lt;a href=&#34;#cb1-122&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&#34;cb1-123&#34;&gt;&lt;a href=&#34;#cb1-123&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;gt; q) {&lt;/span&gt;
&lt;span id=&#34;cb1-124&#34;&gt;&lt;a href=&#34;#cb1-124&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-125&#34;&gt;&lt;a href=&#34;#cb1-125&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p == q) {&lt;/span&gt;
&lt;span id=&#34;cb1-126&#34;&gt;&lt;a href=&#34;#cb1-126&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      ans = (a[p] &amp;amp; qrect).area();&lt;/span&gt;
&lt;span id=&#34;cb1-127&#34;&gt;&lt;a href=&#34;#cb1-127&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb1-128&#34;&gt;&lt;a href=&#34;#cb1-128&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      ans = b[q] - b[p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-129&#34;&gt;&lt;a href=&#34;#cb1-129&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      ans -= a[p].area() - (a[p] &amp;amp; qrect).area();&lt;/span&gt;
&lt;span id=&#34;cb1-130&#34;&gt;&lt;a href=&#34;#cb1-130&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      ans -= a[q].area() - (a[q] &amp;amp; qrect).area();&lt;/span&gt;
&lt;span id=&#34;cb1-131&#34;&gt;&lt;a href=&#34;#cb1-131&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      p++, q--;&lt;/span&gt;
&lt;span id=&#34;cb1-132&#34;&gt;&lt;a href=&#34;#cb1-132&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      smin(mp, q), smax(mq, mp + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-133&#34;&gt;&lt;a href=&#34;#cb1-133&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;lt;= mp) &lt;span class=&#34;ot&#34;&gt;assert&lt;/span&gt;(a[p].l == a[mp].l), ans -= Rect(a[p].t, a[mp].b, a[p].l, l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;).area();&lt;/span&gt;
&lt;span id=&#34;cb1-134&#34;&gt;&lt;a href=&#34;#cb1-134&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (mq &amp;lt;= q) &lt;span class=&#34;ot&#34;&gt;assert&lt;/span&gt;(a[mq].l == a[q].l), ans -= b[q] - b[mq - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - Rect(a[mq].t, a[q].b, a[q].l, r).area();&lt;/span&gt;
&lt;span id=&#34;cb1-135&#34;&gt;&lt;a href=&#34;#cb1-135&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-136&#34;&gt;&lt;a href=&#34;#cb1-136&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s.count(k)) ans += (Rect(top[k], i, now[k].first, now[k].second) &amp;amp; qrect).area();&lt;/span&gt;
&lt;span id=&#34;cb1-137&#34;&gt;&lt;a href=&#34;#cb1-137&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb1-138&#34;&gt;&lt;a href=&#34;#cb1-138&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb1-139&#34;&gt;&lt;a href=&#34;#cb1-139&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-140&#34;&gt;&lt;a href=&#34;#cb1-140&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;可持久化线段树&#34;&gt;可持久化线段树&lt;/h2&gt;
&lt;p&gt;接上矩阵的思路。&lt;/p&gt;
&lt;p&gt;看作每个数维护一个二维数组，每次矩阵内的数 &lt;span class=&#34;math inline&#34;&gt;\(+1\)&lt;/span&gt; ，然后询问一个矩阵的和。&lt;/p&gt;
&lt;p&gt;这个可以用可持久化线段树维护。&lt;/p&gt;
&lt;p&gt;可持久化线段树可以想象成一个矩阵 &lt;span class=&#34;math inline&#34;&gt;\(a[i][j]\)&lt;/span&gt;，第一维是时间，第二维是区间。&lt;/p&gt;
&lt;p&gt;类似于树状数组的区间加区间和的方法，维护差分 &lt;span class=&#34;math inline&#34;&gt;\(b[i][j] = a[i][j] - a[i - 1][j]\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;即每次修改时，在 &lt;span class=&#34;math inline&#34;&gt;\(top\)&lt;/span&gt; 时间对区间 &lt;span class=&#34;math inline&#34;&gt;\((left,right)+1\)&lt;/span&gt;，在 &lt;span class=&#34;math inline&#34;&gt;\(bottom + 1\)&lt;/span&gt; 时间对区间 &lt;span class=&#34;math inline&#34;&gt;\((left, right)-1\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查询矩阵和（本题中时间和区间都是 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt;），即 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
  &amp;amp;\sum_{i = l}^r\sum_{j = l}^r a[i][j]\\
= &amp;amp;\sum_{i = l}^r \sum_{k = 1}^i \sum_{j = l}^rb[k][j]\\
= &amp;amp;\sum_{k = 1}^r \sum_{i = k}^r \sum_{j = l}^rb[k][j]\\
= &amp;amp;\sum_{k = 1}^r (r - k + 1) \left(\sum_{j = l}^rb[k][j]\right)\\
&amp;amp;\{\text{note } s_k = \sum_{j = l}^rb[k][j]\}\\
= &amp;amp;(r + 1)\sum_{k = 1}^rs_k - \sum_{k = 1}^rk\cdot s_k
\end{aligned}
\]&lt;/span&gt; 所以直接在线段树上维护两个值 &lt;span class=&#34;math inline&#34;&gt;\(v, v \times time\)&lt;/span&gt; 就行了。&lt;/p&gt;
&lt;p&gt;每个数都要维护可持久化线段树，要注意写法，容易爆内存（直接改上面的程序成功MLE了）。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#ifdef LOCAL&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define dbg&lt;/span&gt;(args...)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cerr &amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;[32;1m&amp;quot;&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; #&lt;/span&gt;args&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot; -&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;err(args)&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define dbg&lt;/span&gt;(...)&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#endif&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; err() { &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cerr &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;[0m&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;; }&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T, &lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt;... U&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; err(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;x, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; U &amp;amp;... a) { &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cerr &amp;lt;&amp;lt; x &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;; err(a...); }&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; readInt(T &amp;amp;w) {&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c, p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c = getchar())) p = c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (w = c &amp;amp; &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;; isdigit(c = getchar());) w = w * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + (c &amp;amp; &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p) w = -w;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T, &lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt;... U&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; readInt(T &amp;amp;w, U &amp;amp;... a) { readInt(w), readInt(a...); }&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T, &lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; U&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; smin(T &amp;amp;x, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; U &amp;amp;y) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; y &amp;lt; x ? x = y, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; }&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T, &lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; U&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; smax(T &amp;amp;x, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; U &amp;amp;y) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x &amp;lt; y ? x = y, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; }&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; LL;&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; PII;&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;constexpr&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; N(&lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, pos[N];&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; SegTree {&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define ls &lt;/span&gt;o&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define rs &lt;/span&gt;o&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min[N &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; update(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l == r) {&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    min[o] = y; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m = l + r &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  x &amp;lt;= m ? update(ls, l, m, x, y) : update(rs, m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, x, y);&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  min[o] = &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;min(min[ls], min[rs]);&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ask(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt; l) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r &amp;lt;= x) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; min[o];&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m = l + r &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;min(ask(ls, l, m, x), ask(rs, m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, x));&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef ls&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef rs&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Node {&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  Node *ls, *rs;&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v; LL vi;&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  LL sumv, sumvi;&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;} t[N * &lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt;], *null = t, *ptr = t + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; PerSegTree {&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt; &lt;span class=&#34;kw&#34;&gt;public&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  PerSegTree(): root() { root[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = null; }&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; ins(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; it = root.rbegin();&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;ot&#34;&gt;assert&lt;/span&gt;(it-&amp;gt;first &amp;lt;= i);&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    ins(root[i] = it-&amp;gt;second, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, l, r, v, i);&lt;/span&gt;
&lt;span id=&#34;cb2-64&#34;&gt;&lt;a href=&#34;#cb2-64&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb2-65&#34;&gt;&lt;a href=&#34;#cb2-65&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  LL ask(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) {&lt;/span&gt;
&lt;span id=&#34;cb2-66&#34;&gt;&lt;a href=&#34;#cb2-66&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    coef = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-67&#34;&gt;&lt;a href=&#34;#cb2-67&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ask((--root.upper_bound(r))-&amp;gt;second, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, l, r);&lt;/span&gt;
&lt;span id=&#34;cb2-68&#34;&gt;&lt;a href=&#34;#cb2-68&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb2-69&#34;&gt;&lt;a href=&#34;#cb2-69&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt; &lt;span class=&#34;kw&#34;&gt;private&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb2-70&#34;&gt;&lt;a href=&#34;#cb2-70&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, Node*&amp;gt; root;&lt;/span&gt;
&lt;span id=&#34;cb2-71&#34;&gt;&lt;a href=&#34;#cb2-71&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; ins(Node *&amp;amp;o, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i) {&lt;/span&gt;
&lt;span id=&#34;cb2-72&#34;&gt;&lt;a href=&#34;#cb2-72&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    *ptr = *o, o = ptr++;&lt;/span&gt;
&lt;span id=&#34;cb2-73&#34;&gt;&lt;a href=&#34;#cb2-73&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    o-&amp;gt;sumv += &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; * v * (y - x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-74&#34;&gt;&lt;a href=&#34;#cb2-74&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    o-&amp;gt;sumvi += &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; * v * i * (y - x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-75&#34;&gt;&lt;a href=&#34;#cb2-75&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x == l &amp;amp;&amp;amp; r == y) {&lt;/span&gt;
&lt;span id=&#34;cb2-76&#34;&gt;&lt;a href=&#34;#cb2-76&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      o-&amp;gt;v += v, o-&amp;gt;vi += &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; * v * i;&lt;/span&gt;
&lt;span id=&#34;cb2-77&#34;&gt;&lt;a href=&#34;#cb2-77&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-78&#34;&gt;&lt;a href=&#34;#cb2-78&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-79&#34;&gt;&lt;a href=&#34;#cb2-79&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m = l + r &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-80&#34;&gt;&lt;a href=&#34;#cb2-80&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y &amp;lt;= m)&lt;/span&gt;
&lt;span id=&#34;cb2-81&#34;&gt;&lt;a href=&#34;#cb2-81&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      ins(o-&amp;gt;ls, l, m, x, y, v, i);&lt;/span&gt;
&lt;span id=&#34;cb2-82&#34;&gt;&lt;a href=&#34;#cb2-82&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt; m)&lt;/span&gt;
&lt;span id=&#34;cb2-83&#34;&gt;&lt;a href=&#34;#cb2-83&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      ins(o-&amp;gt;rs, m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, x, y, v, i);&lt;/span&gt;
&lt;span id=&#34;cb2-84&#34;&gt;&lt;a href=&#34;#cb2-84&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-85&#34;&gt;&lt;a href=&#34;#cb2-85&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      ins(o-&amp;gt;ls, l, m, x, m, v, i), ins(o-&amp;gt;rs, m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y, v, i);&lt;/span&gt;
&lt;span id=&#34;cb2-86&#34;&gt;&lt;a href=&#34;#cb2-86&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb2-87&#34;&gt;&lt;a href=&#34;#cb2-87&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; coef;&lt;/span&gt;
&lt;span id=&#34;cb2-88&#34;&gt;&lt;a href=&#34;#cb2-88&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  LL ask(Node *o, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb2-89&#34;&gt;&lt;a href=&#34;#cb2-89&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x == l &amp;amp;&amp;amp; r == y) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; coef * o-&amp;gt;sumv - o-&amp;gt;sumvi;&lt;/span&gt;
&lt;span id=&#34;cb2-90&#34;&gt;&lt;a href=&#34;#cb2-90&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m = l + r &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-91&#34;&gt;&lt;a href=&#34;#cb2-91&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    LL ans = (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; * coef * o-&amp;gt;v - o-&amp;gt;vi) * (y - x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-92&#34;&gt;&lt;a href=&#34;#cb2-92&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y &amp;lt;= m)&lt;/span&gt;
&lt;span id=&#34;cb2-93&#34;&gt;&lt;a href=&#34;#cb2-93&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      ans += ask(o-&amp;gt;ls, l, m, x, y);&lt;/span&gt;
&lt;span id=&#34;cb2-94&#34;&gt;&lt;a href=&#34;#cb2-94&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt; m)&lt;/span&gt;
&lt;span id=&#34;cb2-95&#34;&gt;&lt;a href=&#34;#cb2-95&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      ans += ask(o-&amp;gt;rs, m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, x, y);&lt;/span&gt;
&lt;span id=&#34;cb2-96&#34;&gt;&lt;a href=&#34;#cb2-96&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-97&#34;&gt;&lt;a href=&#34;#cb2-97&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      ans += ask(o-&amp;gt;ls, l, m, x, m) + ask(o-&amp;gt;rs, m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y);&lt;/span&gt;
&lt;span id=&#34;cb2-98&#34;&gt;&lt;a href=&#34;#cb2-98&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb2-99&#34;&gt;&lt;a href=&#34;#cb2-99&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb2-100&#34;&gt;&lt;a href=&#34;#cb2-100&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb2-101&#34;&gt;&lt;a href=&#34;#cb2-101&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-102&#34;&gt;&lt;a href=&#34;#cb2-102&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; vis[N];&lt;/span&gt;
&lt;span id=&#34;cb2-103&#34;&gt;&lt;a href=&#34;#cb2-103&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, PII&amp;gt; s;&lt;/span&gt;
&lt;span id=&#34;cb2-104&#34;&gt;&lt;a href=&#34;#cb2-104&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-105&#34;&gt;&lt;a href=&#34;#cb2-105&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  null-&amp;gt;ls = null-&amp;gt;rs = null;&lt;/span&gt;
&lt;span id=&#34;cb2-106&#34;&gt;&lt;a href=&#34;#cb2-106&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  readInt(n);&lt;/span&gt;
&lt;span id=&#34;cb2-107&#34;&gt;&lt;a href=&#34;#cb2-107&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;PerSegTree&amp;gt; t(n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-108&#34;&gt;&lt;a href=&#34;#cb2-108&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  LL ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-109&#34;&gt;&lt;a href=&#34;#cb2-109&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, mex = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x, l, r, k; i &amp;lt;= n; i++) {&lt;/span&gt;
&lt;span id=&#34;cb2-110&#34;&gt;&lt;a href=&#34;#cb2-110&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    readInt(x, l, r, k);&lt;/span&gt;
&lt;span id=&#34;cb2-111&#34;&gt;&lt;a href=&#34;#cb2-111&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    x = (x + ans) % (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-112&#34;&gt;&lt;a href=&#34;#cb2-112&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    l = (l + ans) % i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-113&#34;&gt;&lt;a href=&#34;#cb2-113&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    r = (r + ans) % i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-114&#34;&gt;&lt;a href=&#34;#cb2-114&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    k = (k + ans) % (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-115&#34;&gt;&lt;a href=&#34;#cb2-115&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l &amp;gt; r) &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;swap(l, r);&lt;/span&gt;
&lt;span id=&#34;cb2-116&#34;&gt;&lt;a href=&#34;#cb2-116&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    dbg(x, l, r, k);&lt;/span&gt;
&lt;span id=&#34;cb2-117&#34;&gt;&lt;a href=&#34;#cb2-117&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (vis[x] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; vis[mex]; mex++) ;&lt;/span&gt;
&lt;span id=&#34;cb2-118&#34;&gt;&lt;a href=&#34;#cb2-118&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    SegTree::update(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, i, x);&lt;/span&gt;
&lt;span id=&#34;cb2-119&#34;&gt;&lt;a href=&#34;#cb2-119&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (pos[x]) SegTree::update(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, pos[x], n);&lt;/span&gt;
&lt;span id=&#34;cb2-120&#34;&gt;&lt;a href=&#34;#cb2-120&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    pos[x] = i;&lt;/span&gt;
&lt;span id=&#34;cb2-121&#34;&gt;&lt;a href=&#34;#cb2-121&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; it = s.find(x);&lt;/span&gt;
&lt;span id=&#34;cb2-122&#34;&gt;&lt;a href=&#34;#cb2-122&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (it != s.end()) {&lt;/span&gt;
&lt;span id=&#34;cb2-123&#34;&gt;&lt;a href=&#34;#cb2-123&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; [p, q] = it-&amp;gt;second;&lt;/span&gt;
&lt;span id=&#34;cb2-124&#34;&gt;&lt;a href=&#34;#cb2-124&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      s.erase(it);&lt;/span&gt;
&lt;span id=&#34;cb2-125&#34;&gt;&lt;a href=&#34;#cb2-125&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      t[x].ins(i, p, q, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-126&#34;&gt;&lt;a href=&#34;#cb2-126&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (p &amp;lt;= q) {&lt;/span&gt;
&lt;span id=&#34;cb2-127&#34;&gt;&lt;a href=&#34;#cb2-127&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = SegTree::ask(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, q - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), idx = smin(v, mex) ? &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; : pos[v];&lt;/span&gt;
&lt;span id=&#34;cb2-128&#34;&gt;&lt;a href=&#34;#cb2-128&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        t[v].ins(i, &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;max(p, idx + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), q, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-129&#34;&gt;&lt;a href=&#34;#cb2-129&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        s[v] = PII(idx + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, q);&lt;/span&gt;
&lt;span id=&#34;cb2-130&#34;&gt;&lt;a href=&#34;#cb2-130&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        q = idx;&lt;/span&gt;
&lt;span id=&#34;cb2-131&#34;&gt;&lt;a href=&#34;#cb2-131&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      }&lt;/span&gt;
&lt;span id=&#34;cb2-132&#34;&gt;&lt;a href=&#34;#cb2-132&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-133&#34;&gt;&lt;a href=&#34;#cb2-133&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;[p, q] = s[!x];&lt;/span&gt;
&lt;span id=&#34;cb2-134&#34;&gt;&lt;a href=&#34;#cb2-134&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    p ? q = i : p = q = i;&lt;/span&gt;
&lt;span id=&#34;cb2-135&#34;&gt;&lt;a href=&#34;#cb2-135&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    t[!x].ins(i, i, i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-136&#34;&gt;&lt;a href=&#34;#cb2-136&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    ans = t[k].ask(l, r);&lt;/span&gt;
&lt;span id=&#34;cb2-137&#34;&gt;&lt;a href=&#34;#cb2-137&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb2-138&#34;&gt;&lt;a href=&#34;#cb2-138&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }  &lt;/span&gt;
&lt;span id=&#34;cb2-139&#34;&gt;&lt;a href=&#34;#cb2-139&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-140&#34;&gt;&lt;a href=&#34;#cb2-140&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
- https://blog.asukakyle.top/post/codeforces1148h-holy-diver/ - MIT</description>
        </item>
    
    
    
        <item>
        <title>[Codeforces566C] Logistical Questions</title>
        <link>https://blog.asukakyle.top/post/codeforces566c-logistical-questions/</link>
        <pubDate>Mon, 07 Dec 2020 21:36:10 +0800</pubDate>
        
        <guid>https://blog.asukakyle.top/post/codeforces566c-logistical-questions/</guid>
        <description>HolyK&#39;s Blog https://blog.asukakyle.top/post/codeforces566c-logistical-questions/ -&lt;blockquote&gt;
&lt;p&gt;一棵 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个节点的树，点有点权，边有边权。求这棵树的一个点 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 使下面的式子最小： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i \in Tree} val_i \times dist(i, r)^{\frac32}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(n \le 2 \times 10^5, val_i, dist(u, v) \ge 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;带权重心问题，有点妙。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math display&#34;&gt;\[
f(x) = \sum_{i \in Tree} val_i \times dist(i, x)^{\frac32}
\]&lt;/span&gt; 这里函数 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 的定义域是整棵树（不仅包括原来的点，还包括边上的点 ）。&lt;/p&gt;
&lt;p&gt;下面研究这个函数的性质。&lt;/p&gt;
&lt;p&gt;树上的函数显然不太方便研究，所以考虑换一个 &lt;span class=&#34;math inline&#34;&gt;\(\R\)&lt;/span&gt; 上的函数研究。&lt;/p&gt;
&lt;p&gt;随便选择一条树上路径 &lt;span class=&#34;math inline&#34;&gt;\(u \rightarrow v\)&lt;/span&gt; 作为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 轴，把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 当作原点，这样 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 就是路径上的点到 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的距离。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://images.cnblogs.com/cnblogs_com/HolyK/1882367/o_201207133359image-20201207203647011.png&#34; alt=&#34;image-20201207203647011&#34; /&gt;&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20201207203647011&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;这里以 &lt;span class=&#34;math inline&#34;&gt;\(0 \rightarrow 5\)&lt;/span&gt; 为例，节点 &lt;span class=&#34;math inline&#34;&gt;\(6 \dots 11\)&lt;/span&gt; 分别代表其父亲的一些子树。&lt;/p&gt;
&lt;p&gt;记 &lt;span class=&#34;math inline&#34;&gt;\(d_i = dist(i, 0)\)&lt;/span&gt;，路径上的点分别考虑贡献： &lt;span class=&#34;math display&#34;&gt;\[
f_i(x) =
\begin{cases}
\sum_{c \in subtree(i)} val_i\left (dist(i, c) + d_i - x\right)^\frac32 &amp;amp; x \le d_i\\
\sum_{c \in subtree(i)} val_i\left(dist(i, c) + x - d_i\right)^\frac32 &amp;amp; x &amp;gt; d_i
\end{cases}\\
f(x) = f_0(x) + f_1(x) + f_2(x) + f_3(x) + f_4(x) + f_5(x)
\]&lt;/span&gt; 发现 &lt;span class=&#34;math inline&#34;&gt;\(f_i(x)\)&lt;/span&gt; 可以写成下面这种形式（其中 &lt;span class=&#34;math inline&#34;&gt;\(c_1-x \ge 0, c_2 + x \ge 0\)&lt;/span&gt;） &lt;span class=&#34;math display&#34;&gt;\[
f_i(x) =
\begin{cases}
\sum v(c_1 - x)^\frac32 &amp;amp; x \le d_i\\
\sum v(c_2 + x)^\frac32 &amp;amp; x &amp;gt; d_i
\end{cases}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;求导（这里分段函数的分界点处显然可导） &lt;span class=&#34;math display&#34;&gt;\[
f_i&amp;#39;(x) =
\begin{cases}
-\frac32\sum v(c_1 - x)^\frac12 &amp;amp; x \le d_i\\
\frac32\sum v(c_2 + x)^\frac12 &amp;amp; x &amp;gt; d_i
\end{cases}
\\
f_i&amp;#39;&amp;#39;(x) =
\begin{cases}
\frac34\sum v(c_1 - x)^{-\frac12} &amp;amp; x \le d_i\\
\frac34\sum v(c_2 + x)^{-\frac12} &amp;amp; x &amp;gt; d_i
\end{cases}
\]&lt;/span&gt; 发现 &lt;span class=&#34;math inline&#34;&gt;\(f&amp;#39;&amp;#39;_i(x) \ge 0\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(f&amp;#39;&amp;#39;(x) = \sum_if&amp;#39;&amp;#39;_i(x) \ge 0\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 是个凸函数，至多一个最小值。&lt;/p&gt;
&lt;p&gt;注意到对于树上任意路径这个结论都成立，所以固定起点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，对于所有终点 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 求一次最小值就可以得到答案。&lt;/p&gt;
&lt;p&gt;下图中 &lt;span class=&#34;math inline&#34;&gt;\(2, 3, 4\)&lt;/span&gt; 都代表子树，假设当前在 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; ，需要考虑 &lt;span class=&#34;math inline&#34;&gt;\(1 \rightarrow 2, 3, 4 \rightarrow \dots\)&lt;/span&gt; 几种路径。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://images.cnblogs.com/cnblogs_com/HolyK/1882367/o_201207133406image-20201207211007012.png&#34; alt=&#34;image-20201207212455107&#34; /&gt;&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20201207212455107&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;对于路径 &lt;span class=&#34;math inline&#34;&gt;\(1 \rightarrow i \rightarrow \dots\)&lt;/span&gt;，有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f&amp;#39;(0)_i &amp;amp;= \frac32\left(\sum_{x\in 0} val_xdist(x, 1)^\frac12 - \sum_{x\in i}val_xdist(x, 1)^\frac12\right)\\
&amp;amp;= \frac32\left(\sum_{x}val_xdist(x, 1)^\frac12 - 2\sum_{x\in i}val_xdist(x, 1)^\frac12\right)
\end{aligned}
\]&lt;/span&gt; 观察这个式子，发现最多只有一个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 会使导数小于零，就是使 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{x \in i}val_xdist(x, i)^{\frac12}\)&lt;/span&gt; 最大的那个。&lt;/p&gt;
&lt;p&gt;所以我们只需要向导数小于零的那个方向走就可以了。&lt;/p&gt;
&lt;p&gt;假如从根出发向叶子的方向走，最多走 &lt;span class=&#34;math inline&#34;&gt;\(maxdep\)&lt;/span&gt; 次，每次需要花 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 时间计算答案和导数， 最坏是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的，考虑优化。&lt;/p&gt;
&lt;p&gt;每次走到一个节点时，需要考虑的节点范围会缩小到当前节点的子树内，如果每次找到当前子树的重心，每次规模会减半，这样最多走 &lt;span class=&#34;math inline&#34;&gt;\(\log n\)&lt;/span&gt; 次，最终复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n \log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T, &lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; U&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; smin(T &amp;amp;x, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; U &amp;amp;y) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; y &amp;lt; x ? x = y, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; }&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; T, &lt;span class=&#34;kw&#34;&gt;class&lt;/span&gt; U&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; smax(T &amp;amp;x, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; U &amp;amp;y) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x &amp;lt; y ? x = y, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; }&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;constexpr&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; N(&lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[N], head[N];&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Edge {&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v, w, next;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;} e[N &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; addEdge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; z) {&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  e[++c] = { y, z, head[x] }, head[x] = c;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  e[++c] = { x, z, head[y] }, head[y] = c;&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; vis[N];&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rt, tSize, mSize, siz[N];&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getSize(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  siz[x] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[x]; i; i = e[i].next) {&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y = e[i].v;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y == fa || vis[y])  &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    getSize(y, x);&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    siz[x] += siz[y];&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; findrt(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max = tSize - siz[x];&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[x]; i; i = e[i].next) {&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y = e[i].v;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y == fa || vis[y]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    findrt(y, x);&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    smax(max, siz[y]);&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (smin(mSize, max)) rt = x;&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; ans = INFINITY, f, diff;&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos;&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d) {&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  f += a[x] * sqrt(d) * d, diff += a[x] * sqrt(d);&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[x]; i; i = e[i].next) {&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y = e[i].v;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y == fa) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    dfs(y, x, d + e[i].w);&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[x]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  vis[x] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p;&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  f = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[x]; i; i = e[i].next) {&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y = e[i].v;&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    diff = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    dfs(y, x, e[i].w);&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (smax(m, diff)) p = y;&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    s += diff;&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (smin(ans, f)) pos = x;&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (m * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &amp;gt; s &amp;amp;&amp;amp; !vis[p]) {&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    getSize(p, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    tSize = mSize = siz[p];&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    findrt(p, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    solve(rt);&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;ios&lt;span class=&#34;bu&#34;&gt;::&lt;/span&gt;sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cin.tie(&lt;span class=&#34;kw&#34;&gt;nullptr&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-73&#34;&gt;&lt;a href=&#34;#cb1-73&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb1-74&#34;&gt;&lt;a href=&#34;#cb1-74&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; i++) &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cin &amp;gt;&amp;gt; a[i];&lt;/span&gt;
&lt;span id=&#34;cb1-75&#34;&gt;&lt;a href=&#34;#cb1-75&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y, z; i &amp;lt; n; i++) {&lt;/span&gt;
&lt;span id=&#34;cb1-76&#34;&gt;&lt;a href=&#34;#cb1-76&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cin &amp;gt;&amp;gt; x &amp;gt;&amp;gt; y &amp;gt;&amp;gt; z;&lt;/span&gt;
&lt;span id=&#34;cb1-77&#34;&gt;&lt;a href=&#34;#cb1-77&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    addEdge(x, y, z);&lt;/span&gt;
&lt;span id=&#34;cb1-78&#34;&gt;&lt;a href=&#34;#cb1-78&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb1-79&#34;&gt;&lt;a href=&#34;#cb1-79&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  getSize(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), tSize = mSize = n, findrt(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), solve(rt);&lt;/span&gt;
&lt;span id=&#34;cb1-80&#34;&gt;&lt;a href=&#34;#cb1-80&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%.10f&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, pos, ans);&lt;/span&gt;
&lt;span id=&#34;cb1-81&#34;&gt;&lt;a href=&#34;#cb1-81&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-82&#34;&gt;&lt;a href=&#34;#cb1-82&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
- https://blog.asukakyle.top/post/codeforces566c-logistical-questions/ - MIT</description>
        </item>
    
    
  </channel>
</rss> 